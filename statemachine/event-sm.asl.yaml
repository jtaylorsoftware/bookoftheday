Comment: |
  State machine to generate random book for each Best Seller list.
StartAt: GetLists
States:
  GetLists:
    Type: Task
    Resource: '${GetListsFunction}'
    Retry:
      - ErrorEquals:
          - States.ALL
        IntervalSeconds: 2
        MaxAttempts: 2
        BackoffRate: 2
    Next: MapListToBook
  MapListToBook:
    Type: Map
    MaxConcurrency: 1
    InputPath: $.lists
    Iterator:
      StartAt: GetRandomBook
      States:
        GetRandomBook:
          Type: Task
          Resource: '${RandomBookFunction}'
          Retry:
            - ErrorEquals:
                - States.ALL
              IntervalSeconds: 6
              MaxAttempts: 3
              BackoffRate: 2.5
              Comment: Retry getting book on errors
          Catch:
            - ErrorEquals:
                - States.ALL
              Comment: Send list to DLQ if retry impossible
              Next: SendToBookDLQ
              ResultPath: $.error
          TimeoutSeconds: 10
          Next: WaitRequestLimit
        WaitRequestLimit:
          Type: Wait
          Seconds: 7
          End: true
        SendToBookDLQ:
          Type: Task
          Resource: 'arn:aws:states:::sqs:sendMessage'
          Parameters:
            MessageBody.$: $
            QueueUrl: '${BookDLQURL}'
          End: true
    Next: ReadContacts
  ReadContacts:
    Type: Task
    Resource: '${ReadContactsFunction}'
    Retry:
      - ErrorEquals:
          - States.ALL
        IntervalSeconds: 5
        MaxAttempts: 2
        BackoffRate: 2
    End: true
